openapi: '3.0.2'
info:
  title: Authosization service
  version: '1.0'
servers:
  - url: https://api.server.test/v1
paths:
  /user/create:
    post:
      description: Create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreds'
      responses:
        '201':
          description: User was successfully created
        '403':
          description: User with login already exists
          
  /user/update:
    put:
      description: Update user info
      parameters:
        - $ref: '#/components/parameters/AuthToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
      responses:
        '200':
          description: User was successfully updated
        '401':
          description: Invalid body in request
        '401':
          description: Unauthorized
        '403':
          description: Invalid request
  /user/login:
    post:
      description: Get auth token for user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
        '403':
          description: Invalid credentials
components:
  parameters:
    AuthToken:
      in: header
      name: token
      schema:
        type: string
  schemas:
    UserCreds:
      type: object
      required:
        - login
        - password
      properties:
        login:
          description: Login
          type: string
        password:
          description: Password
          type: string
    UserInfo:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        birth:
          type: string
          format: date
        email:
          type: string
          format: email
        phone:
          type: string
    AuthToken:
      properties:
        token:
          type: string
          

  
